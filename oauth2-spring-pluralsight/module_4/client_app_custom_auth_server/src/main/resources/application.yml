disableEmailVerification: true

spring:
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id:
            client-secret:
          google:
            client-id:
            client-secret: 

          crypto-portfolio:
            client-id: crypto-portfolio
            client-secret:
            client-name: Crypto Portfolio
            scope: openid
            redirect-uri: http://localhost:8080/login/oauth2/code/crypto-portfolio
            client-authentication-method: basic
            authorization-grant-type: authorization_code
            provider: keycloak-provider


        provider:
             # We will register Authorization Server
#            crypto-provider:
#              # Where the client can redirect the User's Browser to begin oauth2 flow.
#              authorization-uri: http://localhost:8081/auth/oauth/authorize
#              # Where the client can exchange the code for the access token.
#              token-uri: http://localhost:8081/auth/oauth/token
#              # Where the client can use access token to get the user's claims.
#              user-info-uri: http://localhost:8081/auth/userinfo
#              # What claim returned by the userinfo can be used to uniquely identify the user
#              user-name-attribute: username
          keycloak-provider:
            issuer-uri: http://localhost:8081/auth/realms/CryptoInc

logging:
  level:
    root: INFO
    com.memorynotfound: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO